// ===============================================
// SUBCATEGORY DEFINITIONS - V. KER√úLETI BEJELENT√âSEK
// ===============================================

import { CategoryType } from './report.types';

export interface Subcategory {
  value: string;
  label: string;
  description?: string;
  icon?: string;
}

export const SUBCATEGORIES: Record<CategoryType, Subcategory[]> = {
  roads: [
    { 
      value: 'road', 
      label: '√ötburkolat probl√©ma', 
      description: 'K√°ty√∫, reped√©s, s√ºllyed√©s, √∫thib√°k',
      icon: 'üõ£Ô∏è'
    },
    { 
      value: 'sidewalk', 
      label: 'J√°rda hib√°ja', 
      description: 'S√©r√ºlt j√°rda, akad√°lymentes hozz√°f√©r√©s probl√©m√°k',
      icon: 'üö∂'
    },
    { 
      value: 'lighting', 
      label: 'K√∂zvil√°g√≠t√°s', 
      description: 'Nem m≈±k√∂d≈ë vagy hib√°s utcai vil√°g√≠t√°s',
      icon: 'üí°'
    },
    { 
      value: 'street_furniture', 
      label: 'K√∂zter√ºleti eszk√∂z', 
      description: 'Pad, szemeteskos√°r, ker√©kp√°rt√°rol√≥, buszmeg√°ll√≥',
      icon: 'ü™ë'
    },
    { 
      value: 'utilities', 
      label: 'K√∂zm≈± probl√©ma', 
      description: 'V√≠z, g√°z, elektromos h√°l√≥zat hib√°ja',
      icon: '‚ö°'
    },
    { 
      value: 'drainage', 
      label: 'V√≠zelvezet√©s', 
      description: 'Csatorna, szikkaszt√°s, v√≠zelfoly√°s probl√©m√°k',
      icon: 'üåä'
    },
    { 
      value: 'other', 
      label: 'Egy√©b infrastrukt√∫ra',
      icon: 'üîß'
    },
  ],

  lighting: [
    {
      value: 'street_light',
      label: 'Utcai vil√°g√≠t√°s',
      description: 'Nem m≈±k√∂d≈ë vagy hib√°s l√°mpatest',
      icon: 'üí°'
    },
    {
      value: 'park_light',
      label: 'Park vil√°g√≠t√°s',
      description: 'K√∂zter√ºleti vil√°g√≠t√°s probl√©m√°k',
      icon: 'üî¶'
    },
    {
      value: 'safety_lighting',
      label: 'Biztons√°gi vil√°g√≠t√°s',
      description: 'K√∂zbiztons√°gi c√©l√∫ megvil√°g√≠t√°s',
      icon: 'üö®'
    },
    {
      value: 'decorative',
      label: 'D√≠szvil√°g√≠t√°s',
      description: '√únnepi, d√≠szkivil√°g√≠t√°s',
      icon: '‚ú®'
    },
    {
      value: 'other',
      label: 'Egy√©b vil√°g√≠t√°si probl√©ma',
      icon: 'üîß'
    },
  ],

  parks: [
    { 
      value: 'waste', 
      label: 'Hullad√©kkezel√©s', 
      description: 'Nem √ºr√≠tett kuka, t√∫lcsordult kont√©ner',
      icon: 'üóëÔ∏è'
    },
    { 
      value: 'illegal_dump', 
      label: 'Illeg√°lis szem√©tlerak√°s', 
      description: 'Jogtalan hullad√©klerak√°s k√∂zter√ºleten',
      icon: 'üö´'
    },
    { 
      value: 'green_area', 
      label: 'Z√∂ldter√ºlet gondoz√°sa', 
      description: 'Park √°llapota, fa metsz√©se, vir√°g√ºltet√©s',
      icon: 'üå≥'
    },
    { 
      value: 'dangerous_tree', 
      label: 'Vesz√©lyes fa', 
      description: 'Kid≈ël√©s vesz√©lye, beteg fa',
      icon: '‚ö†Ô∏è'
    },
    { 
      value: 'street_cleaning', 
      label: 'Utcasepr√©s', 
      description: 'K√∂zter√ºlet tisztas√°gi probl√©m√°k',
      icon: 'üßπ'
    },
    { 
      value: 'graffiti', 
      label: 'Graffiti / rong√°l√°s', 
      description: 'Falfirka, vandalizmus elt√°vol√≠t√°sa',
      icon: 'üé®'
    },
    { 
      value: 'pest_control', 
      label: 'K√°rtev≈ë irt√°s', 
      description: 'Patk√°ny, egy√©b k√°rtev≈ëk',
      icon: 'üêÄ'
    },
    { 
      value: 'other', 
      label: 'Egy√©b tisztas√°gi probl√©ma',
      icon: 'üßΩ'
    },
  ],

  waste: [
    {
      value: 'collection',
      label: 'Hullad√©kgy ≈±jt√©s',
      description: 'Nem √ºr√≠tett kuka, t√∫lcsordult kont√©ner',
      icon: 'üóëÔ∏è'
    },
    {
      value: 'illegal_dump',
      label: 'Illeg√°lis szem√©tlerak√°s',
      description: 'Jogtalan hullad√©klerak√°s k√∂zter√ºleten',
      icon: 'üö´'
    },
    {
      value: 'recycling',
      label: 'Szelekt√≠v hullad√©k',
      description: '√öjrahasznos√≠t√°si probl√©m√°k',
      icon: '‚ôªÔ∏è'
    },
    {
      value: 'bulk_waste',
      label: 'Lomtalan√≠t√°s',
      description: 'Nagyt√°rgy√∫ hullad√©k elsz√°ll√≠t√°s',
      icon: 'üõãÔ∏è'
    },
    {
      value: 'other',
      label: 'Egy√©b hullad√©kkezel√©si probl√©ma',
      icon: 'üßπ'
    },
  ],

  traffic: [
    { 
      value: 'parking', 
      label: 'Parkol√°si probl√©ma', 
      description: 'Tiltott parkol√°s, hi√°nyz√≥ parkol√≥helyek',
      icon: 'üÖøÔ∏è'
    },
    { 
      value: 'traffic_signs', 
      label: 'KRESZ t√°bla', 
      description: 'Hi√°nyz√≥, s√©r√ºlt, rossz helyen l√©v≈ë t√°bl√°k',
      icon: '‚õî'
    },
    { 
      value: 'crosswalk', 
      label: 'Gyalog√°tkel≈ë', 
      description: 'Zebra fest√©s, vil√°g√≠t√°s probl√©m√°k',
      icon: 'üö∏'
    },
    { 
      value: 'traffic_lights', 
      label: 'Jelz≈ël√°mpa', 
      description: 'Hib√°s m≈±k√∂d√©s, programoz√°si probl√©ma',
      icon: 'üö•'
    },
    { 
      value: 'bike_lane', 
      label: 'Ker√©kp√°r√∫t', 
      description: 'Ker√©kp√°rs√°v √°llapota, elv√°laszt√°s',
      icon: 'üö¥'
    },
    { 
      value: 'congestion', 
      label: 'Forgalmi probl√©ma', 
      description: 'Dug√≥, torl√≥d√°s, forgalomszervez√©s',
      icon: 'üöó'
    },
    { 
      value: 'speed_control', 
      label: 'Sebess√©gkorl√°toz√°s', 
      description: 'Sebess√©gcs√∂kkent≈ë int√©zked√©sek javaslata',
      icon: '‚è±Ô∏è'
    },
    { 
      value: 'other', 
      label: 'Egy√©b k√∂zleked√©si probl√©ma',
      icon: 'üöß'
    },
  ],

  noise: [
    { 
      value: 'noise', 
      label: 'Zajszennyez√©s', 
      description: '√âp√≠tkez√©s, sz√≥rakoz√≥hely, forgalmi zaj',
      icon: 'üîä'
    },
    { 
      value: 'neighbor_conflict', 
      label: 'Szomsz√©ds√°gi konfliktus', 
      description: 'Lak√≥k k√∂z√∂tti vit√°k k√∂zvet√≠t√©se',
      icon: 'üè†'
    },
    { 
      value: 'business_issue', 
      label: '√úzlet / vend√©gl√°t√≥hely', 
      description: 'M≈±k√∂d√©si enged√©ly, nyitvatart√°s probl√©m√°k',
      icon: 'üè™'
    },
    { 
      value: 'construction', 
      label: '√âp√≠tkez√©si panasz', 
      description: 'Enged√©ly n√©lk√ºli √©p√≠tkez√©s, id≈ët√∫ll√©p√©s',
      icon: 'üèóÔ∏è'
    },
    { 
      value: 'pet_issue', 
      label: '√Ållattart√°si probl√©ma', 
      description: 'Kutyafuttat√°s, s√©t√°ltat√°s, √ºr√ºl√©k',
      icon: 'üêï'
    },
    { 
      value: 'air_quality', 
      label: 'Leveg≈ëmin≈ës√©g', 
      description: 'Szennyez√©s, szag, f√ºst panaszok',
      icon: 'üí®'
    },
    { 
      value: 'other', 
      label: 'Egy√©b lakoss√°gi panasz',
      icon: 'üì¢'
    },
  ],

  social: [
    { 
      value: 'event_proposal', 
      label: 'Rendezv√©ny szervez√©s', 
      description: 'K√∂z√∂ss√©gi program, fesztiv√°l javaslat',
      icon: 'üéâ'
    },
    { 
      value: 'space_development', 
      label: 'K√∂z√∂ss√©gi t√©r fejleszt√©se', 
      description: 'J√°tsz√≥t√©r, park, k√∂z√∂ss√©gi h√°z',
      icon: 'üèõÔ∏è'
    },
    { 
      value: 'cultural_program', 
      label: 'Kultur√°lis program', 
      description: 'Ki√°ll√≠t√°s, koncert, el≈ëad√°s szervez√©se',
      icon: 'üé≠'
    },
    { 
      value: 'ngo_support', 
      label: 'Civil szervezet t√°mogat√°sa', 
      description: 'Alap√≠tv√°nyok, egyes√ºletek seg√≠t√©se',
      icon: 'ü§ù'
    },
    { 
      value: 'youth_program', 
      label: 'Ifj√∫s√°gi program', 
      description: 'Fiataloknak sz√≥l√≥ kezdem√©nyez√©sek',
      icon: 'üë®‚Äçüéì'
    },
    { 
      value: 'senior_program', 
      label: 'Id≈ësek programja', 
      description: 'Nyugd√≠jasoknak sz√≥l√≥ szolg√°ltat√°sok',
      icon: 'üëµ'
    },
    { 
      value: 'sports', 
      label: 'Sport √©s rekre√°ci√≥', 
      description: 'Sportp√°ly√°k, mozg√°si lehet≈ës√©gek',
      icon: '‚öΩ'
    },
    { 
      value: 'other', 
      label: 'Egy√©b k√∂z√∂ss√©gi kezdem√©nyez√©s',
      icon: 'üé™'
    },
  ],

  grants: [
    { 
      value: 'infrastructure_dev', 
      label: 'Infrastrukt√∫ra fejleszt√©s', 
      description: '√öt, j√°rda, t√©r fel√∫j√≠t√°s, korszer≈±s√≠t√©s',
      icon: 'üèóÔ∏è'
    },
    { 
      value: 'social_dev', 
      label: 'Szoci√°lis fejleszt√©s', 
      description: 'Id≈ësek otthona, √≥voda, eg√©szs√©g√ºgyi k√∂zpont',
      icon: 'üè•'
    },
    { 
      value: 'economic_dev', 
      label: 'Gazdas√°gi fejleszt√©s', 
      description: 'V√°llalkoz√≥i k√∂rnyezet, √ºzletfejleszt√©s',
      icon: 'üíº'
    },
    { 
      value: 'cultural_dev', 
      label: 'Kultur√°lis fejleszt√©s', 
      description: 'M√∫zeum, k√∂nyvt√°r, gal√©ria, m≈±vel≈ëd√©si h√°z',
      icon: 'üìö'
    },
    { 
      value: 'digital_dev', 
      label: 'Digit√°lis fejleszt√©s', 
      description: 'Smart city, WiFi, digitaliz√°ci√≥',
      icon: 'üíª'
    },
    { 
      value: 'tourism_dev', 
      label: 'Turizmus fejleszt√©s', 
      description: 'L√°tv√°nyoss√°gok, vend√©gfogad√°s jav√≠t√°sa',
      icon: 'üó∫Ô∏è'
    },
    { 
      value: 'environmental_dev', 
      label: 'K√∂rnyezeti fejleszt√©s', 
      description: 'Z√∂ld technol√≥gi√°k, fenntarthat√≥s√°g',
      icon: 'üå±'
    },
    { 
      value: 'other', 
      label: 'Egy√©b fejleszt√©si javaslat',
      icon: 'üìà'
    },
  ],

  transparency: [
    { 
      value: 'document', 
      label: 'Dokumentum k√©r√©se', 
      description: 'Hat√°rozat, szerz≈ëd√©s, jegyz≈ëk√∂nyv lek√©r√©se',
      icon: 'üìë'
    },
    { 
      value: 'budget_data', 
      label: 'K√∂lts√©gvet√©si adat', 
      description: 'Bev√©telek, kiad√°sok, p√©nz√ºgyi inform√°ci√≥k',
      icon: 'üí∞'
    },
    { 
      value: 'decision_status', 
      label: 'D√∂nt√©s v√©grehajt√°sa', 
      description: 'K√©pvisel≈ëtest√ºleti hat√°rozat st√°tusza',
      icon: '‚úÖ'
    },
    { 
      value: 'contract_info', 
      label: 'Szerz≈ëd√©s inform√°ci√≥', 
      description: 'K√∂zbeszerz√©s, k√∂zter√ºlet hasznos√≠t√°s',
      icon: 'üìú'
    },
    { 
      value: 'meeting_minutes', 
      label: '√úl√©s jegyz≈ëk√∂nyv', 
      description: 'Test√ºleti √ºl√©sek jegyz≈ëk√∂nyvei',
      icon: 'üìù'
    },
    { 
      value: 'public_data', 
      label: 'K√∂z√©rdek≈± adat', 
      description: 'Inform√°ci√≥szabads√°g szerinti k√©relem',
      icon: 'üîç'
    },
    { 
      value: 'statistics', 
      label: 'Statisztikai adatok', 
      description: 'Ker√ºleti mutat√≥k, felm√©r√©sek',
      icon: 'üìä'
    },
    { 
      value: 'other', 
      label: 'Egy√©b inform√°ci√≥k√©r√©s',
      icon: '‚ùì'
    },
  ],
  
  other: [
    { 
      value: 'uncategorized', 
      label: 'Nem kategoriz√°lhat√≥', 
      description: 'Egyedi, speci√°lis eset',
      icon: '‚ùì'
    },
    { 
      value: 'multi_category', 
      label: 'T√∂bb kateg√≥ri√°t √©rint', 
      description: '√ñsszetett probl√©ma t√∂bb ter√ºleten',
      icon: 'üîÑ'
    },
    { 
      value: 'new_type', 
      label: '√öj t√≠pus√∫ probl√©ma', 
      description: 'Kor√°bban nem tapasztalt jelens√©g',
      icon: 'üÜï'
    },
    { 
      value: 'complex', 
      label: '√ñsszetett √ºgy', 
      description: 'T√∂bb l√©pcs≈ës, hossz√∫ t√°v√∫ megold√°s',
      icon: 'üß©'
    },
    { 
      value: 'urgent_general', 
      label: 'S√ºrg≈ës √°ltal√°nos √ºgy', 
      description: 'Gyors reag√°l√°st ig√©nyl≈ë probl√©ma',
      icon: '‚ö°'
    },
  ],
};

// Helper functions
export function getSubcategoriesForCategory(category: CategoryType): Subcategory[] {
  return SUBCATEGORIES[category] || [];
}

export function getSubcategoryLabel(category: CategoryType, subcategoryValue: string): string {
  const subcategories = getSubcategoriesForCategory(category);
  const found = subcategories.find(sub => sub.value === subcategoryValue);
  return found?.label || subcategoryValue;
}

export function getSubcategoryIcon(category: CategoryType, subcategoryValue: string): string {
  const subcategories = getSubcategoriesForCategory(category);
  const found = subcategories.find(sub => sub.value === subcategoryValue);
  return found?.icon || 'üìã';
}

// Recommended departments by category
export const RECOMMENDED_DEPARTMENTS: Record<CategoryType, string[]> = {
  roads: ['public_works', 'utilities'],
  lighting: ['public_works', 'utilities'],
  parks: ['public_works', 'environment'],
  waste: ['public_works', 'environment'],
  traffic: ['traffic', 'public_works'],
  noise: ['administration', 'social'],
  social: ['culture', 'social'],
  grants: ['development', 'administration'],
  transparency: ['administration'],
  other: ['administration'],
};

export function getRecommendedDepartments(category: CategoryType): string[] {
  return RECOMMENDED_DEPARTMENTS[category] || ['administration'];
}