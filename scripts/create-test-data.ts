import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function main() {
  console.log('üöÄ Teszt adatok l√©trehoz√°sa...\n');

  // El≈ësz√∂r ellen≈ërizz√ºk/l√©trehozzuk a kateg√≥ri√°kat
  console.log('üìÅ Kateg√≥ri√°k ellen≈ërz√©se...');

  let petitionCategory = await prisma.petitionCategory.findFirst({
    where: { name: 'K√∂rnyezetv√©delem' }
  });

  if (!petitionCategory) {
    petitionCategory = await prisma.petitionCategory.create({
      data: {
        name: 'K√∂rnyezetv√©delem',
        description: 'K√∂rnyezetv√©delmi pet√≠ci√≥k',
        color: '#10b981',
        isActive: true,
        sortOrder: 1
      }
    });
  }

  // 1. TESZT PET√çCI√ì
  console.log('üìù Teszt pet√≠ci√≥ l√©trehoz√°sa...');
  const petition = await prisma.petition.create({
    data: {
      title: 'TESZT - Z√∂ld Energi√°ra Val√≥ √Ått√©r√©s Budapest V. Ker√ºlet√©ben',
      description: 'Budapest V. ker√ºlet√©nek s√ºrg≈ësen √°t kell t√©rnie meg√∫jul√≥ energiaforr√°sokra. Ez egy teszt pet√≠ci√≥, amit szabadon al√°√≠rhatsz.',
      fullText: `
        <h2>Mi√©rt fontos ez a pet√≠ci√≥?</h2>
        <p>Budapest V. ker√ºlet√©nek s√ºrg≈ësen √°t kell t√©rnie meg√∫jul√≥ energiaforr√°sokra. Ez egy teszt pet√≠ci√≥, amit szabadon al√°√≠rhatsz.</p>

        <h3>C√©ljaink:</h3>
        <ul>
          <li>100% meg√∫jul√≥ energia 2030-ra</li>
          <li>Napelem panelek minden k√∂zint√©zm√©nyen</li>
          <li>Elektromos aut√≥k t√°mogat√°sa</li>
          <li>Z√∂ld ter√ºletek n√∂vel√©se</li>
        </ul>

        <h3>Mit v√°runk el?</h3>
        <p>A ker√ºleti √∂nkorm√°nyzatt√≥l v√°rjuk, hogy:</p>
        <ol>
          <li>K√©sz√≠tsen r√©szletes tervet a z√∂ld √°t√°ll√°sra</li>
          <li>Biztos√≠tson k√∂lts√©gvet√©st a napelem telep√≠t√©sekre</li>
          <li>Hozzon l√©tre √∂szt√∂nz≈ëket a lak√≥k sz√°m√°ra</li>
        </ol>
      `,
      categoryId: petitionCategory.id,
      targetGoal: 1000,
      participationType: 'HYBRID',
      startDate: new Date(),
      endDate: new Date(Date.now() + 90 * 24 * 60 * 60 * 1000), // 90 nap m√∫lva
      status: 'ACTIVE',
      isPublic: true,
      isActive: true,
      publishedAt: new Date()
    }
  });
  console.log(`‚úÖ Pet√≠ci√≥ l√©trehozva: ${petition.title} (ID: ${petition.id})\n`);

  // 2. TESZT SZAVAZ√ÅS (POLL)
  console.log('üó≥Ô∏è  Teszt szavaz√°s l√©trehoz√°sa...');
  const poll = await prisma.poll.create({
    data: {
      title: 'TESZT - Melyik k√∂zleked√©si fejleszt√©s a legfontosabb?',
      description: 'Szavazz a ker√ºlet k√∂vetkez≈ë k√∂zleked√©si projektj√©re! Ez egy p√©lda szavaz√°s.',
      category: 'K√∂zleked√©s',
      participationType: 'HYBRID',
      startDate: new Date(),
      endDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000), // 30 nap m√∫lva
      status: 'ACTIVE',
      isPublic: true,
      allowAnonymous: true,
      maxVotesPerUser: 1,
      showResults: 'AFTER_VOTING',
      showLiveCount: true,
      options: {
        create: [
          {
            optionText: 'Ker√©kp√°rutak b≈ëv√≠t√©se',
            description: '√öj ker√©kp√°rs√°vok ki√©p√≠t√©se a f≈ëutc√°kon',
            sortOrder: 0
          },
          {
            optionText: 'Elektromos buszok beszerz√©se',
            description: 'A ker√ºlet buszvonalait elektromos j√°rm≈±vekkel lecser√©lni',
            sortOrder: 1
          },
          {
            optionText: 'Parkol√≥helyek n√∂vel√©se',
            description: 'M√©lygar√°zsok √©p√≠t√©se a lak√≥negyedekben',
            sortOrder: 2
          },
          {
            optionText: 'Gyalogos z√≥n√°k kiterjeszt√©se',
            description: 'Tov√°bbi utc√°k lez√°r√°sa az aut√≥k el≈ël',
            sortOrder: 3
          }
        ]
      }
    }
  });
  console.log(`‚úÖ Szavaz√°s l√©trehozva: ${poll.title} (ID: ${poll.id})\n`);

  // 4. TESZT ESEM√âNY
  console.log('üìÖ Teszt esem√©ny l√©trehoz√°sa...');

  const eventStartDate = new Date(Date.now() + 14 * 24 * 60 * 60 * 1000);
  eventStartDate.setHours(9, 0, 0, 0); // 9:00 AM

  const eventEndDate = new Date(eventStartDate);
  eventEndDate.setHours(13, 0, 0, 0); // 13:00 (1:00 PM)

  const event = await prisma.event.create({
    data: {
      title: 'TESZT - K√∂z√∂ss√©gi Takar√≠t√°s a Dunakorz√≥n',
      description: `
        <h2>Csatlakozz hozz√°nk!</h2>
        <p>Seg√≠ts megtiszt√≠tani a Dunakorz√≥t! Ez egy teszt esem√©ny, amit szabadon regisztr√°lhatsz.</p>

        <h3>Program:</h3>
        <ul>
          <li><strong>9:00</strong> - Gy√ºlekez≈ë a L√°nch√≠d budai h√≠df≈ëj√©n√©l</li>
          <li><strong>9:30-12:00</strong> - K√∂z√∂s takar√≠t√°s</li>
          <li><strong>12:00-13:00</strong> - K√∂z√∂s eb√©d (biztos√≠tjuk)</li>
        </ul>

        <h3>Mit hozz magaddal?</h3>
        <ul>
          <li>K√©nyelmes ruh√°zat</li>
          <li>Keszty≈± (ha van)</li>
          <li>Iv√≥v√≠z</li>
        </ul>

        <p><strong>A szem√©tgy≈±jt≈ë zs√°kokat √©s szersz√°mokat mi biztos√≠tjuk!</strong></p>
      `,
      location: 'Dunakorz√≥, Budapest V. ker√ºlet',
      startDate: eventStartDate,
      endDate: eventEndDate,
      maxAttendees: 50,
      status: 'UPCOMING'
    }
  });
  console.log(`‚úÖ Esem√©ny l√©trehozva: ${event.title} (ID: ${event.id})\n`);

  console.log('\nüéâ MINDEN TESZT ADAT SIKERESEN L√âTREHOZVA!\n');
  console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
  console.log('üìã √ñSSZEFOGLAL√ì:');
  console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
  console.log(`\nüìù Pet√≠ci√≥ ID:  ${petition.id}`);
  console.log(`   C√≠m: ${petition.title}`);
  console.log(`   Al√°√≠r√°s c√©l: ${petition.targetGoal}`);
  console.log(`   URL: /peticiok/${petition.id}\n`);

  console.log(`üó≥Ô∏è  Szavaz√°s ID: ${poll.id}`);
  console.log(`   C√≠m: ${poll.title}`);
  console.log(`   Opci√≥k: 4 db`);
  console.log(`   URL: /szavazasok/${poll.id}\n`);

  console.log(`üìÖ Esem√©ny ID:  ${event.id}`);
  console.log(`   C√≠m: ${event.title}`);
  console.log(`   D√°tum: ${event.startDate.toLocaleDateString('hu-HU')}`);
  console.log(`   URL: /esemenyek\n`);

  console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
  console.log('üåê PRODUCTION TESZTEL√âS:');
  console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n');
  console.log(`üìù Pet√≠ci√≥:`);
  console.log(`   https://lovas-political-site-ten.vercel.app/peticiok/${petition.id}\n`);
  console.log(`üó≥Ô∏è  Szavaz√°s:`);
  console.log(`   https://lovas-political-site-ten.vercel.app/szavazasok/${poll.id}\n`);
  console.log(`üìÖ Esem√©ny:`);
  console.log(`   https://lovas-political-site-ten.vercel.app/esemenyek\n`);
}

main()
  .catch((e) => {
    console.error('‚ùå Hiba t√∂rt√©nt:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });
