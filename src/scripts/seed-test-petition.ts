import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function main() {
  console.log('Creating test petition...');

  // Get KÃ¶rnyezet category
  const environmentCategory = await prisma.petitionCategory.findFirst({
    where: { name: 'KÃ¶rnyezet' }
  });

  if (!environmentCategory) {
    console.error('Environment category not found!');
    process.exit(1);
  }

  // Create test petition
  const petition = await prisma.petition.create({
    data: {
      title: 'ZÃ¶ld energiÃ¡ra valÃ³ Ã¡tÃ¡llÃ¡s tÃ¡mogatÃ¡sa',
      description: 'KÃ©rjÃ¼k a helyi Ã¶nkormÃ¡nyzatot, hogy tÃ¡mogassa a megÃºjulÃ³ energia projektek megvalÃ³sÃ­tÃ¡sÃ¡t a kerÃ¼letben.',
      fullText: `
A klÃ­mavÃ¡ltozÃ¡s sÃ¼rgetÅ‘ problÃ©mÃ¡kat jelent vÃ¡rosunk szÃ¡mÃ¡ra. EzÃ©rt kezdemÃ©nyezzÃ¼k, hogy a helyi Ã¶nkormÃ¡nyzat:

1. **Napelempark lÃ©tesÃ­tÃ©se**: Hozzon lÃ©tre egy kÃ¶zÃ¶ssÃ©gi napelemparkot a vÃ¡ros szÃ©lÃ©n
2. **EnergiahatÃ©konysÃ¡g**: ModernizÃ¡lja a kÃ¶zintÃ©zmÃ©nyek energiarendszereit
3. **Elektromos kÃ¶zlekedÃ©s**: BÅ‘vÃ­tse az elektromos autÃ³k tÃ¶ltÅ‘hÃ¡lÃ³zatÃ¡t
4. **ZÃ¶ld Ã©pÃ¼letek**: TÃ¡mogassa a kÃ¶rnyezetbarÃ¡t Ã©pÃ­tkezÃ©seket adÃ³kedvezmÃ©nyekkel

Ezekkel a lÃ©pÃ©sekkel jelentÅ‘sen csÃ¶kkenthetjÃ¼k a vÃ¡ros szÃ©n-dioxid kibocsÃ¡tÃ¡sÃ¡t Ã©s pÃ©ldÃ¡t mutathatunk mÃ¡s telepÃ¼lÃ©seknek.

A petÃ­ciÃ³ cÃ©lja, hogy 2025-re a vÃ¡ros energiafogyasztÃ¡sÃ¡nak legalÃ¡bb 30%-a megÃºjulÃ³ forrÃ¡sokbÃ³l szÃ¡rmazzon.
      `,
      targetGoal: 500,
      categoryId: environmentCategory.id,
      tags: 'zÃ¶ld energia, klÃ­ma, megÃºjulÃ³ energia, kÃ¶rnyezetvÃ©delem',
      status: 'ACTIVE',
      isPublic: true,
      isActive: true,
      startDate: new Date(),
      endDate: new Date(Date.now() + 60 * 24 * 60 * 60 * 1000), // 60 days from now
      publishedAt: new Date(),
      createdBy: 'admin',
    },
    include: {
      category: true,
      _count: {
        select: {
          signatures: true,
        },
      },
    },
  });

  console.log('âœ… Test petition created successfully:');
  console.log(`ID: ${petition.id}`);
  console.log(`Title: ${petition.title}`);
  console.log(`Category: ${petition.category.name}`);
  console.log(`Target Goal: ${petition.targetGoal} signatures`);
  console.log(`Status: ${petition.status}`);
  console.log(`End Date: ${petition.endDate?.toLocaleDateString('hu-HU')}`);
  console.log(`\nðŸ“± Test the petition at: http://localhost:3001/peticiok/${petition.id}`);
  console.log(`ðŸ“‹ View all petitions at: http://localhost:3001/peticiok`);
}

main()
  .catch((e) => {
    console.error('Error creating test petition:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });